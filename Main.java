import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;


public class Main {


   public static void main(String[] args) {
       ArrayList<QBuilder> qBuilders =
               new ArrayList<>(
                       Arrays.asList(
                               new QBuilder("How many git commits can you have?",
                                       "c",
                                       "1",
                                       "2",
                                       "As many as you want",
                                       "0"),
                               new QBuilder(String.format("What is the output of the following code?%nfor (int i = 0; i < 10; i++) {%nSystem.out.println(i);%n}"),
                                       "b",
                                       "0-9 printed on the same line",
                                       "0-9 printed on separate lines",
                                       "0-10 printed on separate lines",
                                       "1-10 printed on separate lines"),
                               new QBuilder("What is the terminal command to create a new empty file?",
                                       "d",
                                       "pwd",
                                       "cd",
                                       "echo",
                                       "touch"),
                               new QBuilder("Which of these is NOT a primitive data type?",
                                       "a",
                                       "String",
                                       "byte",
                                       "long",
                                       "boolean"),
                               new QBuilder("In a UML diagram, how do you know if the variables or methods are public or private?",
                                       "c",
                                       "Public is shown with a minus sign (-) or a green circle, while private is shown with a plus sign (+) or a red square.",
                                       "Public is shown with a plus sign or a red square, while private is shown with a minus sign or a green circle.",
                                       "Public is shown with a plus sign or a green circle, while private is shown with a minus sign or a red square.",
                                       "Public is shown with a minus sign or a red square, while private is shown with a plus sign or a green circle."),
                               new QBuilder(String.format("Unscramble the following code:%n(1)System.out.println(\"odd\");%n(2)}%n(3)public void printEvenOrOdd(int[] listOfNums) {%n(4)} else if (listOfNums[i] %% 3 == 0) {%n(5)}%n(6)System.out.println(\"even\");%n(7)int size = listOfNums.length;%n(8)}%n(9)if (listOfNums[i] %% 2 == 0) {%n(10)for (int i = 0; i < size; i++) {"),
                                       "d",
                                       "3, 10, 7, 9, 6, 4, 8, 2, 5, 1",
                                       "3, 7, 10, 9, 1, 2, 6, 4, 8, 5",
                                       "1, 10, 8, 6, 2, 5, 9, 7, 3, 4",
                                       "3, 7, 10, 9, 6, 4, 1, 2, 5, 8"),
                               new QBuilder(String.format("Which loop will ignore the first and last elements of the following array?%nint size = array.length;"),
                                       "a",
                                       "for (int i = 1; i < size-1; i++)",
                                       "for (int i = 0; i < size; i++)",
                                       "for (int i = 1; i < size; i++)",
                                       "for (int i = 2; i < size-1; i++)"),
                               new QBuilder(String.format("Which of the following will execute only if both are true?%nx = 5;%ny = 7;"),
                                       "b",
                                       "if (x < 10 || y > 7)",
                                       "if (x < 10 && y < 10)",
                                       "if (x > 10 || y < 10)",
                                       "if (x > 0 && y < 3)"),
                               new QBuilder("Which of the following will instantiate an array with 5 integers?",
                                       "a",
                                       "int[] myArray = new int[5];",
                                       "int[] myArray = new myArray[5];",
                                       "int[] myArray = new int[]{5};",
                                       "int{} myArray = new int{5};"),
                               new QBuilder(String.format("What are the values of a and b?%nint i = 1;%nint a = i++;%nint b = ++i;"),
                                       "c",
                                       "a = 2, b = 3",
                                       "a = 1, b = 2",
                                       "a = 1, b = 3",
                                       "a = 2, b = 2"),
                               new QBuilder(String.format("What is the output of the following code?%nint a = 2;%nint b = 3;%nint c = 4;%nint d = 5;%nSystem.out.println((--b * a) + (c * d--));"),
                                       "d",
                                       "22",
                                       "40",
                                       "20",
                                       "24"),
                               new QBuilder(String.format("Which of the following is the correct way to create a constructor for the code below?%npublic class Person {%n    private int personId;"),
                                       "b",
                                       String.format("%npublic int Person(int personId) {%n    this.personId = personId;%n}"),
                                       String.format("%npublic Person(int personId) {%n    this.personId = personId;%n}"),
                                       String.format("%npublic Person(int personId) {%n    personId = this.personId;%n}"),
                                       String.format("%npublic int Person(personId) {%n    int this.personId = personId;%n}")),
                               new QBuilder("What is it called when you have multiple constructors with the same name but different parameters in a class?",
                                       "c",
                                       "Overriding",
                                       "Instantiating",
                                       "Overloading",
                                       "Nothing. It's impossible to have multiple constructors in the same class."),
                               new QBuilder("What is the proper syntax (learned through ATA) for the main method?",
                                       "d",
                                       "public void static main(String[] args) {",
                                       "public void static main(String args) {",
                                       "public static main(String args[]) {",
                                       "public static void main(String[] args) {"),
                               new QBuilder("Which git command would you enter into the terminal to see the commits you have already staged and pushed?",
                                       "a",
                                       "git log",
                                       "git status",
                                       "git init",
                                       "git commit"),
                               new QBuilder("What is the correct order of Integer (whole number) primitive data types from smallest to largest?",
                                       "b",
                                       "short, byte, int, long",
                                       "byte, short, int, long",
                                       "byte, int, short, long",
                                       "int, byte, short, long"),
                               new QBuilder("What is the correct way to compare strings for equality?",
                                       "c",
                                       "==",
                                       "&&",
                                       ".equals()",
                                       ".equal()"),
                               new QBuilder("What is the syntax to declare an array?",
                                       "d",
                                       "dataType() variableName;",
                                       "dataType[] variableName{};",
                                       "dataType{} variableName;",
                                       "dataType[] variableName;"),
                               new QBuilder("How are enum variables written according to the ATA modules?",
                                       "a",
                                       "all capitals, separated by commas",
                                       "camel case, separated by semicolons",
                                       "all lowercase, separated by commas",
                                       "all capitals, separated by semicolons"),
                               new QBuilder("Formatted strings use format specifiers that have to be written in a specific order. Which of the following options is the correct order?",
                                       "b",
                                       "%[argumentIndex][width][flags][.precision]dataTypeIdentifier",
                                       "%[argumentIndex][flags][width][.precision]dataTypeIdentifier",
                                       "%[argumentIndex][flags][.precision][width]dataTypeIdentifier",
                                       "%dataTypeIdentifier[argumentIndex][.precision][flags][width]"),
                               new QBuilder(String.format("What is the output of the following code?%nString unit = \"gallons\";%ndouble camel = 53.00;%nSystem.out.println(String.format(\"A camel can drink %%2$.0f %%1$s of water in 3 minutes.\", unit, camel);"),
                                       "c",
                                       "A camel can drink gallons 53 of water in 3 minutes.",
                                       "A camel can drink 53.0 gallons of water in 3 minutes.",
                                       "A camel can drink 53 gallons of water in 3 minutes.",
                                       "A camel can drink 53.00 gallons of water in 3 minutes."),
                               new QBuilder("When does a short circuit happen in Java?",
                                       "d",
                                       "When you have a continuous loop.",
                                       "When you have logic errors in your code.",
                                       "When you have overloaded constructors",
                                       "When the evaluation of a logical expression exits before the evaluation is complete."),
                               new QBuilder("How would you capitalize all of the letters in a string?",
                                       "a",
                                       "return StringName.toUpperCase();",
                                       "return StringName.toCapitals();",
                                       "return toUpperCase(StringName);",
                                       "return toCapitals(StringName);"),
                               new QBuilder("What method do you use to determine how many objects are in an ArrayList?",
                                       "b",
                                       ".length()",
                                       ".size()",
                                       ".valueOf()",
                                       ".indexOf()"),
                               new QBuilder("Which of the following is NOT a type of constructor?",
                                       "c",
                                       "parameterized constructor",
                                       "default constructor",
                                       "private constructor",
                                       "no-arg constructor"),
                               new QBuilder("Which of the following for loops would iterate through an array backwards?",
                                       "d",
                                       "for (int i = 0; i <= array.length; i--)",
                                       "for (int i = array.length() - 1; i >= 0; i--)",
                                       "for (int i = array.size() - 1; i >= 0; i++)",
                                       "for (int i = array.length - 1; i >= 0; i--)"),
                               new QBuilder("What is one of the major key differences between .length and .length()",
                                       "a",
                                       ".length tells you the size of an array, while .length() tells you how many characters a String contains.",
                                       ".length tells you how many characters a String contains, while .length() tells you the size of an array.",
                                       ".length tells you the size of an array, while .length() tells you the size of an ArrayList.",
                                       ".length tells you the size of an array and can only be used in for loops, while .length() tells you the size of an array and can be used anywhere."),
                               new QBuilder("Which of these options places the steps for Computational Thinking in the correct order?",
                                       "b",
                                       "Abstraction, Decomposition, Pattern Recognition, Algorithm",
                                       "Decomposition, Pattern Recognition, Abstraction, Algorithm",
                                       "Pattern Recognition, Decomposition, Algorithm, Abstraction",
                                       "Abstraction, Pattern Recognition, Decomposition, Algorithm"),
                               new QBuilder("Which of the following defines the \"abstraction\" step of Computational Thinking?",
                                       "c",
                                       "The breakdown of larger problems into smaller problems.",
                                       "Recognize similarities between two different problems and experiences.",
                                       "Represents important details while ignoring irrelevant details.",
                                       "Design simple steps to solve a problem."),
                               new QBuilder("Which of the following is NOT a benefit of using the terminal over the graphical user interface (GUI)?",
                                       "d",
                                       "Automation and programmability.",
                                       "Common interface across operating systems.",
                                       "More fine-grained, predictable, and direct control.",
                                       "Confusing text-based commands"),
                               new QBuilder("What does the \"HEAD\" refer to in the current branch of a git repository?",
                                       "a",
                                       "The most recent commit in that branch.",
                                       "The oldest commit in that branch.",
                                       "The location of the last added file.",
                                       "The person who created the first commit of the branch."),
                               new QBuilder("Which of the following is false about sequence diagrams?",
                                       "b",
                                       "Sequence diagrams represent a timeline that begins at the top and descends to mark the sequence of interactions.",
                                       "Sequence diagrams illustrate the relationship between classes.",
                                       "A sequence diagram illustrates from where code is activated using the source point of an arrow under each object or person.",
                                       "Sequence diagrams help you to plan out how your code will work/flow."),
                               new QBuilder("What is the main difference between primitive and reference data types?",
                                       "c",
                                       "Primitive data types are used for local variables while reference types are required for instance variables.",
                                       "Primitive types store numbers while reference types store characters.",
                                       "How they are stored in the computer memory.",
                                       "The number of decimal places a variable can hold."),
                               new QBuilder("What is the difference between instantiating and initializing?",
                                       "d",
                                       "Instantiating is when you call an instance of another class, while initializing is when you create an instance variable.",
                                       "Instantiating is when you assign a value to an instance variable, while initializing is when you create an instance variable.",
                                       "Instantiating is when you create an instance variable and initializing is when you create a local variable.",
                                       "Instantiating is when you create an instance variable and initializing is when you assign a value to an instance variable."),
                               new QBuilder("Which type of operator would you use to test equality?",
                                       "a",
                                       "Comparison operators",
                                       "Compound operators",
                                       "Logical operators",
                                       "Equality operators"),
                               new QBuilder("Which keyword is used to end a loop before it's completed?",
                                       "b",
                                       "Continue",
                                       "Break",
                                       "Exit",
                                       "Else"),
                               new QBuilder(String.format("Given the following values, which compound expression will evaluate to false%nint x = 10;%nint y = 18;"),
                                       "c",
                                       "(x <= 10) && !(y == 3)",
                                       "(x > 4) || !(y <= 17)",
                                       "(x > 9) && !(y >= 18)",
                                       "!(x < y) || (x >= 7)"),
                               new QBuilder(String.format("What is the output of the following code?%nfor (int i = 10; i > 0; i -= 2) {%nSystem.out.print(i + \" \");%n}"),
                                       "d",
                                       "10 8 6 4 2 0",
                                       "8 6 4 2 0",
                                       "2 4 6 8 10",
                                       "10 8 6 4 2"),
                               new QBuilder("What exception would you run into when you attempt to use reference type objects before they are initialized.",
                                       "a",
                                       "NullPointerException",
                                       "ArrayIndexOutOfBoundsException",
                                       "RecognizingException",
                                       "IncorrectInitializationException"),
                               new QBuilder("Which of the following is NOT a reason to use local variables?",
                                       "b",
                                       "Can reuse variable names if they are in a different scope.",
                                       "Can reuse variable names if they are in the same scope.",
                                       "Use less memory.",
                                       "You don't have to worry that they will be changed outside the scope of the code block"),
                               new QBuilder("Which of the following is the correct definition of Unary Operators?",
                                       "c",
                                       "They are operators that perform actions on one value and return multiple values.",
                                       "They use the following operators: >, >=, <, <=, ==, !=",
                                       "They are operators that perform actions on one value and return one value.",
                                       "They are operators that perform actions on multiple values but only return one value."),
                               new QBuilder(String.format("Which parts of this code are arguments and which parts are parameters?%npublic class SomeClass {%n    public void startTask() {%n        System.out.println(addTwoNumbers(30,25));%n    }%n    public int addTwoNumbers(int number1, int number2) {%n        return number1 + number2;%n    }%n}"),
                                       "d",
                                       String.format("Arguments: addTwoNumbers%nParameters: int number1, int number2"),
                                       String.format("Arguments: 30,25%nParameters: addTwoNumbers"),
                                       String.format("Arguments: int number1, int number2%nParameters: 30,25"),
                                       String.format("Arguments: 30,25%nParameters: int number1, int number2")),
                               new QBuilder("Which of the following is NOT a keyword for exception handling?",
                                       "a",
                                       "exception",
                                       "try",
                                       "catch",
                                       "finally"),
                               new QBuilder("Which of the following is a reason to use a break statement.",
                                       "b",
                                       "To search for all the items in a list and exit when you have found them all.",
                                       "To search for a specific item in a list and break as soon as you find it.",
                                       "To break out of a conditional statement.",
                                       "To break out of a method."),
                               new QBuilder("Virtually all Java programs use _________ to combine classes together to accomplish their tasks.",
                                       "c",
                                       "variables",
                                       "methods",
                                       "composition",
                                       "attributes"),
                               new QBuilder("Which of the following is the correct import statement for the Scanner class?",
                                       "d",
                                       "import java.lang.Scanner;",
                                       "import java.Scanner;",
                                       "import java.util.Scanner(System.in);",
                                       "import java.util.Scanner;"),
                               new QBuilder("When would you use a while loop over a for loop?",
                                       "a",
                                       "When you don't know the number of iterations ahead of time.",
                                       "When you do know the number of iterations ahead of time.",
                                       "When you want to have a more compact code.",
                                       "You should never use while loops in place of for loops."),
                               new QBuilder("Which of the following is true about for-each loops?",
                                       "b",
                                       "It can only be used with ArrayLists.",
                                       "It always loops through every element in a list unless a break statement is used.",
                                       "It creates a local variable that represents the index of each element in the list.",
                                       "It is also called epic for loop."),
                               new QBuilder("Which of the following shows the correct way to have a multiline string?",
                                       "c",
                                       String.format("%nString s = 'Some words%n    some more words';"),
                                       String.format("%nString s = \"Some words +%nsome more words\";"),
                                       String.format("%nString s = \"Some words \" +%n\"some more words\";"),
                                       String.format("%nString s = \"Some words %nsome more words\";")),
                               new QBuilder("A(n) ________ cannot be changed after it's created.",
                                       "d",
                                       "object",
                                       "method",
                                       "local variable",
                                       "String"),
                               new QBuilder("What happens when you reassign a String variable to another String?",
                                       "d",
                                       "The old String object is deleted and a new String object is assigned to the variable.",
                                       "The String variable value is updated to the new String.",
                                       "It copies the old String variable to another String object and updates the String variable to the new String.",
                                       "A new object is created and the String variable has its reference updated to the new object."),
                               new QBuilder("What is the best way to create a String within a loop?",
                                       "a",
                                       "Using StringBuilder",
                                       "Using String.format",
                                       "Using regular String objects and concatenation",
                                       "Using getter methods"),
                               new QBuilder("What method would you use to find the starting position of a substring in a String?",
                                       "b",
                                       "valueOf()",
                                       "indexOf()",
                                       "toString()",
                                       "substring()"),
                               new QBuilder("Which of the following statements is false about an object's hashCode method?",
                                       "c",
                                       "The hashCode method is used in combination with the equals method to determine if two objects are the same.",
                                       "If you override the equals method, you also need to override the hashCode method.",
                                       "It's used to update object field values.",
                                       "It creates an integer value for an object to allow for quick searching."),
                               new QBuilder("What do packages help with?",
                                       "d",
                                       "Naming classes.",
                                       "Writing a class definition.",
                                       "Reducing file sizes.",
                                       "Organizing class files which makes finding them easier"),
                               new QBuilder(String.format("Will this code compile?%nimport java.util.Scanner;%nimport java.time.LocalDate;%npackage com.ata.auto;%npublic class Car {%n    //attributes and methods%n}"),
                                       "b",
                                       "yes",
                                       "no",
                                       "maybe",
                                       "I don't know"),
                               new QBuilder("What method is used to get all enum values?",
                                       "a",
                                       "values()",
                                       "valueOf()",
                                       "enum()",
                                       "contents()"),
                               new QBuilder("What method do you use to add Strings to a StringBuilder object?",
                                       "c",
                                       "add()",
                                       "set()",
                                       "append()",
                                       "toString()"),
                               new QBuilder("How do you print an array element that holds a primitive or String value?",
                                       "d",
                                       "System.out.println(arrayName.valueOf(indexNumber));",
                                       "System.out.println(arrayName(indexNumber));",
                                       "System.out.println(arrayName.getterMethod());",
                                       "System.out.println(arrayName[indexNumber]);"),
                               new QBuilder(String.format("What will happen with the following method call?%npublic void multiplyByTwo(int x) {%n    x = x * 2;%n}%nint x = 5;%nmultiplyByTwo(x);%nSystem.out.println(x);"),
                                       "a",
                                       "The number 5 is printed.",
                                       "The code does not compile.",
                                       "The number 10 is printed.",
                                       "You get an IllegalArgumentException(\"x can not be changed\");"),
                               new QBuilder(String.format("Complete the following code so it will capitalize the first letter in each word and print it.%nString A = \"hello\";%nString B = \"world\";"),
                                       "b",
                                       String.format("A = A.substring(0).toUpperCase();%nB = B.substring(0).toUpperCase();%nSystem.out.println(A + \" \" + B);"),
                                       String.format("A = A.substring(0, 1).toUpperCase() + A.substring(1);%nB = B.substring(0, 1).toUpperCase() + B.substring(1);%nSystem.out.println(A + \" \" + B);"),
                                       String.format("A = A.toUpperCase(substring(0, 1)) + A.substring(1);%nB = B.toUpperCase(substring(0, 1)) + B.substring(1);%nSystem.out.println(A + \" \" + B);"),
                                       String.format("A = toUpperCase(A.substring(0, 1));%nB = toUpperCase(B.substring(0, 1));%nSystem.out.println(A + \" \" + B);"))
                       )
               );


       Questions questions = new Questions(new Scanner(new InputStreamReader(System.in, StandardCharsets.UTF_8)), qBuilders);
       System.out.println(String.format("Java Practice Test%nEnter the letter of the correct answer to move onto the next question.%nThere is only one correct answer per question."));
       System.out.println("There are a total of " + qBuilders.size() + " questions.");
       System.out.println();
       questions.question1();
       System.out.println("You got a total of " + questions.incorrectFirstTry.size() + " questions wrong on the first try.");
       System.out.println(String.format("Your test score percentage is %.2f%%", calculatePercentage(questions.incorrectFirstTry.size(), qBuilders.size())));
       questions.incorrectListOption();
   }


   private static double calculatePercentage(int size, int size1) {
       double x = 100;
       double percentage = ((double) size / size1) * x;
       x -= percentage;
       return x;
   }
}
